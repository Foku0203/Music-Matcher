# Generated by Django 5.2.6 on 2025-09-14 16:26

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Artist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=255)),
            ],
            options={
                "db_table": "artists",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Emotion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=30)),
            ],
            options={
                "db_table": "emotions",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="Genre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(db_index=True, max_length=60, unique=True)),
            ],
            options={
                "db_table": "genres",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="AdminAction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("action_type", models.CharField(max_length=40)),
                ("target_type", models.CharField(max_length=30)),
                ("target_id", models.BigIntegerField()),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "admin",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "admin_actions",
            },
        ),
        migrations.CreateModel(
            name="Album",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=255)),
                ("release_year", models.IntegerField(blank=True, null=True)),
                ("cover_url", models.TextField(blank=True)),
                (
                    "artist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="albums",
                        to="matcher.artist",
                    ),
                ),
            ],
            options={
                "db_table": "albums",
                "ordering": ["title"],
            },
        ),
        migrations.CreateModel(
            name="EmotionScan",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("method", models.CharField(default="manual", max_length=20)),
                (
                    "confidence",
                    models.DecimalField(decimal_places=3, default=1, max_digits=4),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "emotion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="matcher.emotion",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="emotion_scans",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "emotion_scans",
            },
        ),
        migrations.CreateModel(
            name="ModelVersion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("name", models.CharField(max_length=60)),
                ("version", models.CharField(max_length=40)),
                ("algorithm", models.CharField(blank=True, max_length=60)),
                ("artifact_uri", models.TextField(blank=True)),
                (
                    "status",
                    models.CharField(
                        choices=[("ready", "ready"), ("deprecated", "deprecated")],
                        default="ready",
                        max_length=20,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "model_versions",
            },
        ),
        migrations.CreateModel(
            name="ModelMetric",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("dataset_name", models.CharField(max_length=60)),
                (
                    "accuracy",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=5, null=True
                    ),
                ),
                (
                    "val_accuracy",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=5, null=True
                    ),
                ),
                (
                    "loss",
                    models.DecimalField(
                        blank=True, decimal_places=4, max_digits=6, null=True
                    ),
                ),
                (
                    "ndcg_at_10",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=5, null=True
                    ),
                ),
                (
                    "recall_at_10",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=5, null=True
                    ),
                ),
                (
                    "mrr",
                    models.DecimalField(
                        blank=True, decimal_places=3, max_digits=5, null=True
                    ),
                ),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "model_version",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="metrics",
                        to="matcher.modelversion",
                    ),
                ),
            ],
            options={
                "db_table": "model_metrics",
            },
        ),
        migrations.CreateModel(
            name="ModelDeployment",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "stage",
                    models.CharField(
                        choices=[("production", "production"), ("staging", "staging")],
                        max_length=20,
                    ),
                ),
                ("is_active", models.BooleanField(default=True)),
                (
                    "deployed_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "deployed_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "model_version",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="deployments",
                        to="matcher.modelversion",
                    ),
                ),
                (
                    "rolled_back_from",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="rolled_back_to",
                        to="matcher.modelversion",
                    ),
                ),
            ],
            options={
                "db_table": "model_deployments",
            },
        ),
        migrations.CreateModel(
            name="ModelAction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("action_type", models.CharField(max_length=20)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "admin",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "model_version",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="actions",
                        to="matcher.modelversion",
                    ),
                ),
            ],
            options={
                "db_table": "model_actions",
            },
        ),
        migrations.CreateModel(
            name="Playlist",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=255)),
                ("is_public", models.BooleanField(default=False)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("updated_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="playlists",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "playlists",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Recommendation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "algorithm",
                    models.CharField(
                        choices=[("cf", "cf"), ("cb", "cb"), ("hybrid", "hybrid")],
                        default="cf",
                        max_length=40,
                    ),
                ),
                (
                    "generated_at",
                    models.DateTimeField(default=django.utils.timezone.now),
                ),
                (
                    "context_emotion",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="matcher.emotion",
                    ),
                ),
                (
                    "model_version",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="matcher.modelversion",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="recommendations",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "recommendations",
            },
        ),
        migrations.CreateModel(
            name="RetrainJob",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("target_model", models.CharField(max_length=60)),
                ("started_at", models.DateTimeField(blank=True, null=True)),
                ("finished_at", models.DateTimeField(blank=True, null=True)),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("queued", "queued"),
                            ("running", "running"),
                            ("failed", "failed"),
                            ("succeeded", "succeeded"),
                        ],
                        default="queued",
                        max_length=20,
                    ),
                ),
                (
                    "output_model_version",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="matcher.modelversion",
                    ),
                ),
                (
                    "triggered_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "db_table": "retrain_jobs",
            },
        ),
        migrations.CreateModel(
            name="Song",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("title", models.CharField(max_length=255)),
                ("duration_sec", models.IntegerField(default=0)),
                (
                    "platform",
                    models.CharField(
                        choices=[("youtube", "youtube"), ("spotify", "spotify")],
                        default="youtube",
                        max_length=20,
                    ),
                ),
                ("external_id", models.CharField(blank=True, max_length=128)),
                ("is_active", models.BooleanField(default=True)),
                ("lyrics", models.CharField(blank=True, max_length=1000)),
                (
                    "album",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="songs",
                        to="matcher.album",
                    ),
                ),
                (
                    "artist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="songs",
                        to="matcher.artist",
                    ),
                ),
            ],
            options={
                "db_table": "songs",
                "ordering": ["title"],
            },
        ),
        migrations.CreateModel(
            name="PlayHistory",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "source",
                    models.CharField(
                        choices=[("manual", "manual"), ("none", "none")],
                        default="none",
                        max_length=20,
                    ),
                ),
                ("started_at", models.DateTimeField(default=django.utils.timezone.now)),
                ("finished_at", models.DateTimeField(blank=True, null=True)),
                (
                    "detected_emotion",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="matcher.emotion",
                    ),
                ),
                (
                    "scan",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="matcher.emotionscan",
                    ),
                ),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="play_history",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "song",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="play_history",
                        to="matcher.song",
                    ),
                ),
            ],
            options={
                "db_table": "play_history",
            },
        ),
        migrations.CreateModel(
            name="RecommendationItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("rank", models.IntegerField()),
                ("score", models.DecimalField(decimal_places=3, max_digits=6)),
                (
                    "recommendation",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="matcher.recommendation",
                    ),
                ),
                (
                    "song",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="matcher.song"
                    ),
                ),
            ],
            options={
                "db_table": "recommendation_items",
                "unique_together": {("recommendation", "song")},
            },
        ),
        migrations.CreateModel(
            name="PlaylistItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("position", models.IntegerField(default=0)),
                ("added_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "playlist",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="matcher.playlist",
                    ),
                ),
                (
                    "song",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="matcher.song"
                    ),
                ),
            ],
            options={
                "db_table": "playlist_items",
                "ordering": ["position"],
                "unique_together": {("playlist", "song")},
            },
        ),
        migrations.CreateModel(
            name="Interaction",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "type",
                    models.CharField(
                        choices=[
                            ("like", "like"),
                            ("dislike", "dislike"),
                            ("favorite", "favorite"),
                            ("rate", "rate"),
                        ],
                        max_length=12,
                    ),
                ),
                ("rating", models.SmallIntegerField(blank=True, null=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="interactions",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "song",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="interactions",
                        to="matcher.song",
                    ),
                ),
            ],
            options={
                "db_table": "interactions",
                "unique_together": {("user", "song", "type")},
            },
        ),
        migrations.CreateModel(
            name="FavoriteSong",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("updated_at", models.DateTimeField(auto_now=True)),
                ("created_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "user",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="favorite_songs",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "song",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="fav_by",
                        to="matcher.song",
                    ),
                ),
            ],
            options={
                "db_table": "favorite_songs",
                "unique_together": {("user", "song")},
            },
        ),
        migrations.CreateModel(
            name="SongEmotion",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("created_at", models.DateTimeField(auto_now_add=True, db_index=True)),
                ("confidence", models.DecimalField(decimal_places=3, max_digits=4)),
                (
                    "source",
                    models.CharField(
                        choices=[("ml", "ml"), ("rule", "rule"), ("manual", "manual")],
                        max_length=20,
                    ),
                ),
                ("updated_at", models.DateTimeField(default=django.utils.timezone.now)),
                (
                    "emotion",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="matcher.emotion",
                    ),
                ),
                (
                    "song",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="emotion_scores",
                        to="matcher.song",
                    ),
                ),
            ],
            options={
                "db_table": "song_emotions",
                "unique_together": {("song", "emotion", "source")},
            },
        ),
        migrations.CreateModel(
            name="SongGenre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "genre",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="matcher.genre"
                    ),
                ),
                (
                    "song",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="matcher.song"
                    ),
                ),
            ],
            options={
                "db_table": "song_genres",
                "unique_together": {("song", "genre")},
            },
        ),
    ]
